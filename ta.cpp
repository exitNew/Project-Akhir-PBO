#include<stdio.h>
#include<iostream>
#include<conio.h>
#include<windows.h>

using namespace std;

class Item 
{
	private:
		string nama;
		string category;
		int Buy;
		int Sell;
		int stok;
	public:
		Item(){}
		Item(string nama, string category,int stok,int Buy,int Sell)
		{
			this->nama = nama;
			this->category = category;
			this->stok = stok;
			this->Buy = Buy;
			this->Sell = Sell;
		}
		string getNama()
		{
			return nama;
		}
		string getCategory()
		{
			return category;
		}
		int getBuyPrice()
		{
			return Buy;
		}
		int getSellPrice()
		{
			return Sell;
		}
		int getStok()
		{
			return stok;
		}
		void minStok(int a)
		{
			this->stok -= a;
		}
		void addStok(int a)
		{
			this->stok += a;
		}
		
		
};

class Inventory
{
	private:
		Item item[100];
	public:
		static int ctr;
		Inventory(){}
		void addItem(Item item)
		{
			this->item[ctr] = item;
		}
		void showInventory()
		{
			for(int i=0;i<ctr;i++)
			{
				cout << i << ". " << item[i].getNama() << endl;
			}
		}
};

class Skill
{
	private:
		string nama;
		string description;
		int consume; // mp consume
		int efek;
	public:
		Skill(){}
		Skill(string nama, string description, int consume, int efek)
		{
			this->nama = nama;
			this->description = description;
			this->consume = consume;
			this->efek = efek;
		}
		string getNama()
		{
			return nama;
		}
		string getDescription()
		{
			return description;
		}
		int getConsume()
		{
			return consume;
		}
		int getEfek()
		{
			return efek;
		}
};

class Hero
{
	private:
		string nama;
		string job;
		int Hp;
		int Mp;
		int Atk;
		int Def;
		int MAtk; // magic atk
		int MDef; // magic def
		int Agi; // agility
		int level;
		int exp; // exp now
		int expN; // exp need
		Skill skill[4];
		Item HPpotion;
		Item Mppotion;
		
	public:
		static int money;
		Hero(){}
		Hero(string nama, string job)
		{
			this->nama = nama;
			this->job = job;
			this->Hp = 100;
			this->Mp = 20;
			this->Atk = 10;
			this->Def = 10;
			this->MAtk = 10;
			this->MDef = 10;
			this->Agi = 20;
			this->level = 1;
			this->exp = 0;
			this->expN = 50;
		}
		string getNama()
		{
			return nama;
		}
		string getJob()
		{
			return job;
		}
		int getHp()
		{
			return Hp;
		}
		int getMp()
		{
			return Mp;
		}
		int getAtk()
		{
			return Atk;
		}
		int getDef()
		{
			return Def;
		}
		int getMAtk()
		{
			return MAtk;
		}
		int getMDef()
		{
			return MDef;
		}
		int getAgi()
		{
			return Agi;
		}
		int getLevel()
		{
			return level;
		}
		int getExp()
		{
			return exp;
		}
		int getExpN()
		{
			return expN;
		}
		void setSkill(Skill skill,int a)
		{
			this->skill[a] = skill;
		}
		Skill getSkill(int a)
		{
			return skill[a];
		}
		void hpUp(int a)
		{
			this->Hp += a;
		}
		void hpDown(int a)
		{
			this->Hp -= a;
		}
		void mpUp(int a)
		{
			this->Mp += a;
		}
		void mpDown(int a)
		{
			this->Mp -= a;
		}
		void atkUp(int a)
		{
			this->Atk += a;
		}
		void atkDown(int a)
		{
			this->Atk -= a;
		}
		void defUp(int a)
		{
			this->Def += a;
		}
		void defDown(int a)
		{
			this->Def -= a;
		}
		void mAtkUp(int a)
		{
			this->MAtk += a;
		}
		void mAtkDown(int a)
		{
			this->MAtk -= a;
		}
		void mDefUp(int a)
		{
			this->MDef += a;
		}
		void mDefDown(int a)
		{
			this->MDef -= a;
		}
		void agiUp(int a)
		{
			this->Agi += a;
		}
		void agiDown(int a)
		{
			this->Agi -= a;
		}
		void levelUP()
		{
			this->level++;
			this->expN +=50;
			this->exp = 0;
		}
		void expUp(int a)
		{
			this->exp += a;
		}
};

class Villain
{
	private:
		string nama;
		int Hp;
		int Mp;
		int Atk;
		int Def;
		int MAtk; // magic atk
		int MDef; // magic def
		int Agi; // agility
		int level;
		Skill skill[4];
	public:
		Villain(){}
		Villain(string nama, int Hp, int Mp, int Atk, int Def, int MAtk, int MDef, int Agi, int level)
		{
			this->nama = nama;
			this->Hp = Hp;
			this->Mp = Mp;
			this->Atk = Atk;
			this->Def = Def;
			this->MAtk = MAtk;
			this->MDef = MDef;
			this->level = level;
			this->Agi = Agi;
		}
		string getNama()
		{
			return nama;
		}
		void hpUp(int a)
		{
			this->Hp += a;
		}
		void hpDown(int a)
		{
			this->Hp -= a;
		}
		void mpUp(int a)
		{
			this->Mp += a;
		}
		void mpDown(int a)
		{
			this->Mp -= a;
		}
		int getHp()
		{
			return Hp;
		}
		int getMp()
		{
			return Mp;
		}
		int getAtk()
		{
			return Atk;
		}
		int getDef()
		{
			return Def;
		}
		int getMAtk()
		{
			return MAtk;
		}
		int getMDef()
		{
			return MDef;
		}
		int getAgi()
		{
			return Agi;
		}
		int getLevel()
		{
			return level;
		}
		void setSkill(Skill skill,int a)
		{
			this->skill[a] = skill;
		}
		Skill getSkill(int a)
		{
			return skill[a];
		}
		void atkUp(int a)
		{
			this->Atk += a;
		}
		void atkDown(int a)
		{
			this->Atk -= a;
		}
		void defUp(int a)
		{
			this->Def += a;
		}
		void defDown(int a)
		{
			this->Def -= a;
		}
		void mAtkUp(int a)
		{
			this->MAtk += a;
		}
		void mAtkDown(int a)
		{
			this->MAtk -= a;
		}
		void mDefUp(int a)
		{
			this->MDef += a;
		}
		void mDefDown(int a)
		{
			this->MDef -= a;
		}
		void agiUp(int a)
		{
			this->Agi += a;
		}
		void agiDown(int a)
		{
			this->Agi -= a;
		}
};

class Location
{
	private:	
		string nama;
		string category;
		Villain villain;	
	public:
		Location(){}
		Location(string nama,string category)
		{
			this->nama = nama;
			this->category = category;
		}
		void setVillain(Villain villain)
		{
			this->villain = villain;
		}
		Villain getVillain()
		{
			return villain;
		}
		string getNama()
		{
			return nama;
		}
		string getCategory()
		{
			return category;
		}
};

class Map
{
	private:
		int curLoc; //current location
		Location loc[8];
	public:
		Map(){}
		void setCurloc(int a)
		{
			this->curLoc = a;
		}
		void setLoc(Location loc, int a)
		{
			this->loc[a] = loc;
		}
		int getCurLoc()
		{
			return curLoc;
		}
		Location getLoc(int a)
		{
			return loc[a];
		}
		
};

class Shop
{
	private:
		Item itemheal[2];
		Item Equip[100];
	public:
		Shop(){}
		Item getItemHeal(int a)
		{
			return itemheal[a];
		}
		Item getEquip(int a)
		{
			return Equip[a];
		}
};

void stalingardOnClick() //0
{ 
	cout << " " << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t===================================================================================          =========" << endl;
	cout << "\t===================================================================================         ==========" << endl;
	cout << "\t==================================================================================           =========" << endl;
	cout << "\t=================================================================================             ========" << endl;
	cout << "\t===========================================================================                  =========" << endl;
	cout << "\t=====================  ==============================  =================      [ ]           ==========" << endl;
	cout << "\t=====================   ===========================    ===============    Chokurdakh       ===========" << endl;
	cout << "\t===================       =========================      ==       ====       /           =============" << endl;
	cout << "\t==================         ======================        =                  /           ==============" << endl;
	cout << "\t================               ==============         -------[ ]-----------             ==============" << endl;
	cout << "\t==========        [ ]           ===========          /      Skald         /              =============" << endl;
	cout << "\t=========       Moskva               =====          /                    /           =================" << endl;
	cout << "\t=========       /     \\              ====          /                    /          ===================" << endl;
	cout << "\t======         /       \\              ==         [ ]                   /          ====================" << endl;
	cout << "\t=======       /         \\                     Norilsk                 /            ===================" << endl;
	cout << "\t======       /           \\                     /                     /              ==================" << endl;
	cout << "\t======      /             \\                   /                     /                     ============" << endl;
	cout << "\t=======    /               [ ]----------------                    [ ]                          =======" << endl;
	cout << "\t======   [X]              Tyumen              \\                 Yakutsk                     ==========" << endl;
	cout << "\t==   Stalingard                                \\                 /                           =========" << endl;
	cout << "\t===          =======       ===   =              \\               /             =====     ==     =======" << endl;
	cout << "\t===          ======= ==   =========               [ ]----------            ===============    ========" << endl;
	cout << "\t====      ==============  ==========  ==        Irkutsk                     ==============   =========" << endl;
	cout << "\t=====     ==============================                               =================     =========" << endl;
	cout << "\t======   =================================                ========    ================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
}

void moskvaOnClick() //1
{
	cout << " " << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t===================================================================================          =========" << endl;
	cout << "\t===================================================================================         ==========" << endl;
	cout << "\t==================================================================================           =========" << endl;
	cout << "\t=================================================================================             ========" << endl;
	cout << "\t===========================================================================                  =========" << endl;
	cout << "\t=====================  ==============================  =================      [ ]           ==========" << endl;
	cout << "\t=====================   ===========================    ===============    Chokurdakh       ===========" << endl;
	cout << "\t===================       =========================      ==       ====       /           =============" << endl;
	cout << "\t==================         ======================        =                  /           ==============" << endl;
	cout << "\t================               ==============         -------[ ]-----------             ==============" << endl;
	cout << "\t==========        [X]           ===========          /      Skald         /              =============" << endl;
	cout << "\t=========       Moskva               =====          /                    /           =================" << endl;
	cout << "\t=========       /     \\              ====          /                    /          ===================" << endl;
	cout << "\t======         /       \\              ==         [ ]                   /          ====================" << endl;
	cout << "\t=======       /         \\                     Norilsk                 /            ===================" << endl;
	cout << "\t======       /           \\                     /                     /              ==================" << endl;
	cout << "\t======      /             \\                   /                     /                     ============" << endl;
	cout << "\t=======    /               [ ]----------------                    [ ]                          =======" << endl;
	cout << "\t======   [ ]              Tyumen              \\                 Yakutsk                     ==========" << endl;
	cout << "\t==   Stalingard                                \\                 /                           =========" << endl;
	cout << "\t===          =======       ===   =              \\               /             =====     ==     =======" << endl;
	cout << "\t===          ======= ==   =========               [ ]----------            ===============    ========" << endl;
	cout << "\t====      ==============  ==========  ==        Irkutsk                     ==============   =========" << endl;
	cout << "\t=====     ==============================                               =================     =========" << endl;
	cout << "\t======   =================================                ========    ================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
}

void TyumenOnClick() //2
{
	cout << " " << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t===================================================================================          =========" << endl;
	cout << "\t===================================================================================         ==========" << endl;
	cout << "\t==================================================================================           =========" << endl;
	cout << "\t=================================================================================             ========" << endl;
	cout << "\t===========================================================================                  =========" << endl;
	cout << "\t=====================  ==============================  =================      [ ]           ==========" << endl;
	cout << "\t=====================   ===========================    ===============    Chokurdakh       ===========" << endl;
	cout << "\t===================       =========================      ==       ====       /           =============" << endl;
	cout << "\t==================         ======================        =                  /           ==============" << endl;
	cout << "\t================               ==============         -------[ ]-----------             ==============" << endl;
	cout << "\t==========        [ ]           ===========          /      Skald         /              =============" << endl;
	cout << "\t=========       Moskva               =====          /                    /           =================" << endl;
	cout << "\t=========       /     \\              ====          /                    /          ===================" << endl;
	cout << "\t======         /       \\              ==         [ ]                   /          ====================" << endl;
	cout << "\t=======       /         \\                     Norilsk                 /            ===================" << endl;
	cout << "\t======       /           \\                     /                     /              ==================" << endl;
	cout << "\t======      /             \\                   /                     /                     ============" << endl;
	cout << "\t=======    /               [X]----------------                    [ ]                          =======" << endl;
	cout << "\t======   [ ]              Tyumen              \\                 Yakutsk                     ==========" << endl;
	cout << "\t==   Stalingard                                \\                 /                           =========" << endl;
	cout << "\t===          =======       ===   =              \\               /             =====     ==     =======" << endl;
	cout << "\t===          ======= ==   =========               [ ]----------            ===============    ========" << endl;
	cout << "\t====      ==============  ==========  ==        Irkutsk                     ==============   =========" << endl;
	cout << "\t=====     ==============================                               =================     =========" << endl;
	cout << "\t======   =================================                ========    ================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
}

void norilskOnClick() //3
{
	cout << " " << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t===================================================================================          =========" << endl;
	cout << "\t===================================================================================         ==========" << endl;
	cout << "\t==================================================================================           =========" << endl;
	cout << "\t=================================================================================             ========" << endl;
	cout << "\t===========================================================================                  =========" << endl;
	cout << "\t=====================  ==============================  =================      [ ]           ==========" << endl;
	cout << "\t=====================   ===========================    ===============    Chokurdakh       ===========" << endl;
	cout << "\t===================       =========================      ==       ====       /           =============" << endl;
	cout << "\t==================         ======================        =                  /           ==============" << endl;
	cout << "\t================               ==============         -------[ ]-----------             ==============" << endl;
	cout << "\t==========        [ ]           ===========          /      Skald         /              =============" << endl;
	cout << "\t=========       Moskva               =====          /                    /           =================" << endl;
	cout << "\t=========       /     \\              ====          /                    /          ===================" << endl;
	cout << "\t======         /       \\              ==         [X]                   /          ====================" << endl;
	cout << "\t=======       /         \\                     Norilsk                 /            ===================" << endl;
	cout << "\t======       /           \\                     /                     /              ==================" << endl;
	cout << "\t======      /             \\                   /                     /                     ============" << endl;
	cout << "\t=======    /               [ ]----------------                    [ ]                          =======" << endl;
	cout << "\t======   [ ]              Tyumen              \\                 Yakutsk                     ==========" << endl;
	cout << "\t==   Stalingard                                \\                 /                           =========" << endl;
	cout << "\t===          =======       ===   =              \\               /             =====     ==     =======" << endl;
	cout << "\t===          ======= ==   =========               [ ]----------            ===============    ========" << endl;
	cout << "\t====      ==============  ==========  ==        Irkutsk                     ==============   =========" << endl;
	cout << "\t=====     ==============================                               =================     =========" << endl;
	cout << "\t======   =================================                ========    ================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
}

void skaldOnClick() //4
{
	cout << " " << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t===================================================================================          =========" << endl;
	cout << "\t===================================================================================         ==========" << endl;
	cout << "\t==================================================================================           =========" << endl;
	cout << "\t=================================================================================             ========" << endl;
	cout << "\t===========================================================================                  =========" << endl;
	cout << "\t=====================  ==============================  =================      [ ]           ==========" << endl;
	cout << "\t=====================   ===========================    ===============    Chokurdakh       ===========" << endl;
	cout << "\t===================       =========================      ==       ====       /           =============" << endl;
	cout << "\t==================         ======================        =                  /           ==============" << endl;
	cout << "\t================               ==============         -------[X]-----------             ==============" << endl;
	cout << "\t==========        [ ]           ===========          /      Skald         /              =============" << endl;
	cout << "\t=========       Moskva               =====          /                    /           =================" << endl;
	cout << "\t=========       /     \\              ====          /                    /          ===================" << endl;
	cout << "\t======         /       \\              ==         [ ]                   /          ====================" << endl;
	cout << "\t=======       /         \\                     Norilsk                 /            ===================" << endl;
	cout << "\t======       /           \\                     /                     /              ==================" << endl;
	cout << "\t======      /             \\                   /                     /                     ============" << endl;
	cout << "\t=======    /               [ ]----------------                    [ ]                          =======" << endl;
	cout << "\t======   [ ]              Tyumen              \\                 Yakutsk                     ==========" << endl;
	cout << "\t==   Stalingard                                \\                 /                           =========" << endl;
	cout << "\t===          =======       ===   =              \\               /             =====     ==     =======" << endl;
	cout << "\t===          ======= ==   =========               [ ]----------            ===============    ========" << endl;
	cout << "\t====      ==============  ==========  ==        Irkutsk                     ==============   =========" << endl;
	cout << "\t=====     ==============================                               =================     =========" << endl;
	cout << "\t======   =================================                ========    ================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
}

void irkutskOnClick() //5
{
	cout << " " << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t===================================================================================          =========" << endl;
	cout << "\t===================================================================================         ==========" << endl;
	cout << "\t==================================================================================           =========" << endl;
	cout << "\t=================================================================================             ========" << endl;
	cout << "\t===========================================================================                  =========" << endl;
	cout << "\t=====================  ==============================  =================      [ ]           ==========" << endl;
	cout << "\t=====================   ===========================    ===============    Chokurdakh       ===========" << endl;
	cout << "\t===================       =========================      ==       ====       /           =============" << endl;
	cout << "\t==================         ======================        =                  /           ==============" << endl;
	cout << "\t================               ==============         -------[ ]-----------             ==============" << endl;
	cout << "\t==========        [ ]           ===========          /      Skald         /              =============" << endl;
	cout << "\t=========       Moskva               =====          /                    /           =================" << endl;
	cout << "\t=========       /     \\              ====          /                    /          ===================" << endl;
	cout << "\t======         /       \\              ==         [ ]                   /          ====================" << endl;
	cout << "\t=======       /         \\                     Norilsk                 /            ===================" << endl;
	cout << "\t======       /           \\                     /                     /              ==================" << endl;
	cout << "\t======      /             \\                   /                     /                     ============" << endl;
	cout << "\t=======    /               [ ]----------------                    [ ]                          =======" << endl;
	cout << "\t======   [ ]              Tyumen              \\                 Yakutsk                     ==========" << endl;
	cout << "\t==   Stalingard                                \\                 /                           =========" << endl;
	cout << "\t===          =======       ===   =              \\               /             =====     ==     =======" << endl;
	cout << "\t===          ======= ==   =========               [X]----------            ===============    ========" << endl;
	cout << "\t====      ==============  ==========  ==        Irkutsk                     ==============   =========" << endl;
	cout << "\t=====     ==============================                               =================     =========" << endl;
	cout << "\t======   =================================                ========    ================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
}

void yakutskOnClick() //6
{
	cout << " " << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t===================================================================================          =========" << endl;
	cout << "\t===================================================================================         ==========" << endl;
	cout << "\t==================================================================================           =========" << endl;
	cout << "\t=================================================================================             ========" << endl;
	cout << "\t===========================================================================                  =========" << endl;
	cout << "\t=====================  ==============================  =================      [ ]           ==========" << endl;
	cout << "\t=====================   ===========================    ===============    Chokurdakh       ===========" << endl;
	cout << "\t===================       =========================      ==       ====       /           =============" << endl;
	cout << "\t==================         ======================        =                  /           ==============" << endl;
	cout << "\t================               ==============         -------[ ]-----------             ==============" << endl;
	cout << "\t==========        [ ]           ===========          /      Skald         /              =============" << endl;
	cout << "\t=========       Moskva               =====          /                    /           =================" << endl;
	cout << "\t=========       /     \\              ====          /                    /          ===================" << endl;
	cout << "\t======         /       \\              ==         [ ]                   /          ====================" << endl;
	cout << "\t=======       /         \\                     Norilsk                 /            ===================" << endl;
	cout << "\t======       /           \\                     /                     /              ==================" << endl;
	cout << "\t======      /             \\                   /                     /                     ============" << endl;
	cout << "\t=======    /               [ ]----------------                    [X]                          =======" << endl;
	cout << "\t======   [ ]              Tyumen              \\                 Yakutsk                     ==========" << endl;
	cout << "\t==   Stalingard                                \\                 /                           =========" << endl;
	cout << "\t===          =======       ===   =              \\               /             =====     ==     =======" << endl;
	cout << "\t===          ======= ==   =========               [ ]----------            ===============    ========" << endl;
	cout << "\t====      ==============  ==========  ==        Irkutsk                     ==============   =========" << endl;
	cout << "\t=====     ==============================                               =================     =========" << endl;
	cout << "\t======   =================================                ========    ================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
}

void chokurdakhOnClick() //7
{
	cout << " " << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t===================================================================================          =========" << endl;
	cout << "\t===================================================================================         ==========" << endl;
	cout << "\t==================================================================================           =========" << endl;
	cout << "\t=================================================================================             ========" << endl;
	cout << "\t===========================================================================                  =========" << endl;
	cout << "\t=====================  ==============================  =================      [X]           ==========" << endl;
	cout << "\t=====================   ===========================    ===============    Chokurdakh       ===========" << endl;
	cout << "\t===================       =========================      ==       ====       /           =============" << endl;
	cout << "\t==================         ======================        =                  /           ==============" << endl;
	cout << "\t================               ==============         -------[ ]-----------             ==============" << endl;
	cout << "\t==========        [ ]           ===========          /      Skald         /              =============" << endl;
	cout << "\t=========       Moskva               =====          /                    /           =================" << endl;
	cout << "\t=========       /     \\              ====          /                    /          ===================" << endl;
	cout << "\t======         /       \\              ==         [ ]                   /          ====================" << endl;
	cout << "\t=======       /         \\                     Norilsk                 /            ===================" << endl;
	cout << "\t======       /           \\                     /                     /              ==================" << endl;
	cout << "\t======      /             \\                   /                     /                     ============" << endl;
	cout << "\t=======    /               [ ]----------------                    [ ]                          =======" << endl;
	cout << "\t======   [ ]              Tyumen              \\                 Yakutsk                     ==========" << endl;
	cout << "\t==   Stalingard                                \\                 /                           =========" << endl;
	cout << "\t===          =======       ===   =              \\               /             =====     ==     =======" << endl;
	cout << "\t===          ======= ==   =========               [ ]----------            ===============    ========" << endl;
	cout << "\t====      ==============  ==========  ==        Irkutsk                     ==============   =========" << endl;
	cout << "\t=====     ==============================                               =================     =========" << endl;
	cout << "\t======   =================================                ========    ================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
	cout << "\t======================================================================================================" << endl;
}

int Hero::money = 0;

int main()
{
	int pil;
    int piljob;
    string nama;
    int heroctr = 0;
    Hero hero[4];
    Map map;
    map.setCurloc(0);
    
    Villain villain1("Akutagawa", 100, 20, 5,5, 5,5,10,1);
    Skill skillvil1("Roshoumon Agito","Small Damage to Hero", 10,5);
    Skill skillvil2("Demonic Armor","Medium Defense Up to Enemy", 20,10);
    villain1.setSkill(skillvil1,0);
    villain1.setSkill(skillvil2,1);
    
    Villain villain2("Adrammelech", 150, 30, 10,10, 10,10,20,3);
    Skill skillvil3("Lightning Dance","Small Damage to All Hero", 10,5);
    Skill skillvil4("For The tainted Sorrow","Small Agility and Attack up to Enemy, Small Defense down to Hero", 20,50);
    villain1.setSkill(skillvil3,0);
    villain1.setSkill(skillvil4,1);
    
    Villain villain3("Collossus", 300, 50, 25, 50, 20,50,35,10);
    Skill skillvil5("Force Field","Heal to Enemy", 15,0);
    Skill skillvil6("Resolute Reactor","Medium Defense Up to Enemy",20,10);
    Skill skillvil7("Dimensional Cleave","Large Damage Up to Hero",50,20);
    villain1.setSkill(skillvil5,0);
    villain1.setSkill(skillvil6,1);
    villain1.setSkill(skillvil7,2);
    
    Villain villain4("Osamu Dazai", 300, 50,30, 30, 30,20,35,10);
    Skill skillvil8("Lover Curse","Medium Physical Damage to Hero", 15,10);
    Skill skillvil9("Berserk Edge","Small Attack Up, Defense up to Enemy ",20,5);
    Skill skillvil10("Focus Charge","Medium Attack Up to Enemy",20,10);
    villain1.setSkill(skillvil8,0);
    villain1.setSkill(skillvil9,1);
    villain1.setSkill(skillvil10,2);
    
    Villain villain5("Grand Order", 1000, 300,100, 100, 100,100,100,50);
    Skill skillvil11("Prism Halo","Nullify All Buff and Debuff On Battlefield", 50,0);
    Skill skillvil12("Gamma ray","Massive Physical Damage to All Hero ",45,25);
    Skill skillvil13("Ruler of Fate","Large Attack Down, Defense Down, Magic Attack Down, Magic Defense Down, Agility Down to All hero",70,20);
    Skill skillvil14("Conjuction","Set All Hero Hp to 1",150,0);
    villain1.setSkill(skillvil11,0);
    villain1.setSkill(skillvil12,1);
    villain1.setSkill(skillvil13,2);
    villain1.setSkill(skillvil14,3);
    
    Location loc1("Stalingrad","City");
    Location loc2("Mosvka","Dungeon");
    loc2.setVillain(villain1);
	Location loc3("Tyumen","City");
	Location loc4("Norilsk","Dungeon");
	loc4.setVillain(villain3);
    Location loc5("Skald","City");
    Location loc6("Irkutsk","Dungeon");
    loc6.setVillain(villain2);
    Location loc7("Yakutsk","Dungeon");
    loc7.setVillain(villain4);
    Location loc8("Chokurdakh","Dungeon");
    loc8.setVillain(villain5);
    
    map.setLoc(loc1,0);
    map.setLoc(loc2,1);
    map.setLoc(loc3,2);
    map.setLoc(loc4,3);
    map.setLoc(loc5,4);
    map.setLoc(loc6,5);
    map.setLoc(loc7,6);
    map.setLoc(loc8,7);
    
    Item HPotion("Health Potion","Heal 30% from Max Hp",10,50,25);
    Item MPotion("mana Potion","Heal 30% from Max Mp",10,50,25);
    
    do{
    	system("cls");
        cout<<"The 4 wanderers set off to seize the means of production, but first,"<<endl<<"they have to defeat the 5 Guardian of Bourgeoisie"<<endl;
        cout<<"\nWill they succeed? or will their adventure end in ruin?"<<endl;
       	system("pause");
		system("cls");
	    cout<<"WELCOME TO THE ADVENTURE OF THE PROLETARIAT "<<endl;
	    cout<<"1.Start"<<endl;
		cout<<"2.Guide"<<endl;
	    cout<<"3.Tips"<<endl;
	    cout<<"4.Credits"<<endl;
	    cout<<"5.Exit"<<endl;
	    cout<<"Choice: "; cin >> pil;
	    if(pil==1) {
	    do {
			system("cls");
            cout<<"Hero "<<heroctr + 1<<endl;
            cout<<"Name : "; cin>>nama;
            cout<<"Job : "<<endl;
            cout<<"LIST : "<<endl;
            cout<<"1. Warrior"<<endl;
            cout<<"2. Guardian"<<endl;
            cout<<"3. Archer"<<endl;
            cout<<"4. Black Mage"<<endl;
            cout<<"5. White Mage"<<endl;
            cout<<"Choice: "; cin>>piljob;
            if(piljob==1) {
				Hero hero1(nama,"Warrior");
				hero1.hpUp(20);
				hero1.atkUp(20);
				hero1.defUp(10);
				hero1.agiUp(5);
				Skill skill[4];
				Skill skill1("Hyper Slash","Medium Physical Damage to Enemy", 5,10);
				Skill skill2("Armor Break","Small Physical Damage and Defense Down to Enemy", 10,5);
				Skill skill3("Rage","Big Attack up to self", 15,15);
				Skill skill4("Rampage Trust","Big Physical Damage to Enemy", 40,20);
				hero1.setSkill(skill1,0);
				hero1.setSkill(skill2,1);
				hero1.setSkill(skill3,2);
				hero1.setSkill(skill4,3);
				hero[heroctr] = hero1;
			} else if(piljob==2){
				Hero hero1(nama,"Guardian");
				hero1.hpUp(50);
				hero1.defUp(30);
				hero1.atkUp(10);
				hero1.agiUp(5);
				Skill skill1("Hardened Shield","Medium Defense up to self ", 5,10);
				Skill skill2("Shield Charge","Small Physical Damage and Attack Down to Enemy",10,10);
				Skill skill3("Phalanx","Big Defense up to Party", 30,20);
				Skill skill4("Unchallenged","Massive Defense up to self", 35,100);
				hero1.setSkill(skill1,0);
				hero1.setSkill(skill2,1);
				hero1.setSkill(skill3,2);
				hero1.setSkill(skill4,3);
				hero[heroctr] = hero1;
			} else if(piljob==3){
				Hero hero1(nama,"Archer");
				hero1.mpUp(10);
				hero1.atkUp(15);
				hero1.defUp(10);
				hero1.agiUp(20);
				Skill skill1("Rain of Arrow","Medium Physical Damage to Enemy", 5,10);
				Skill skill2("Steady Aim","Medium Agility Up to self",10,20);
				Skill skill3("Poison Arrow","Small Physical Damage and Medium Agility Down to Enemy", 15,20);
				Skill skill4("Judicious Shot","Small Physical Damage and Large Defense Down to Enemy", 40,30);
				hero1.setSkill(skill1,0);
				hero1.setSkill(skill2,1);
				hero1.setSkill(skill3,2);
				hero1.setSkill(skill4,3);
				hero[heroctr] = hero1;
			} else if(piljob==4){
				Hero hero1(nama,"Black Mage");
				hero1.mpUp(20);
				hero1.mAtkUp(25);
				hero1.mDefUp(15);
				Skill skill1("Aether Blast","Medium Magic Damage to Enemy", 5,20);
				Skill skill2("Elemental Focus","Medium Magic Attack Up to self",10,20);
				Skill skill3("Dark Haze","Small Magic Damage and Small Magic Defense Down to Enemy", 20,30);
				Skill skill4("Laser Focus","Large Magic Attack Up to Self", 40,50);
				hero1.setSkill(skill1,0);
				hero1.setSkill(skill2,1);
				hero1.setSkill(skill3,2);
				hero1.setSkill(skill4,3);
				hero[heroctr] = hero1;
			} else if(piljob==5){
				Hero hero1(nama,"White Mage");
				hero1.mpUp(20);
				hero1.mAtkUp(15);
				hero1.mDefUp(25);
				Skill skill1("Panacea","Medium Heal to Party", 5,0);
				Skill skill2("Medicament","Large Heal to 1 Hero",10,0);
				Skill skill3("Bless","Medium Magic Damage to Enemy ", 20,10);
				Skill skill4("Advent Eternal","Medium Attack up, Defense up, Magic Attack up, Magic Defense up to party", 50,10);
				hero1.setSkill(skill1,0);
				hero1.setSkill(skill2,1);
				hero1.setSkill(skill3,2);
				hero1.setSkill(skill4,3);
				hero[heroctr] = hero1;
			}heroctr++;
        }while(heroctr!=4);
		   
		int pilih,pilih2;
        int shop,shop1;
        int jum; 
            do {
                if(map.getCurLoc()==0){
                	system("cls");
                	cout << "Welcome to " << map.getLoc(0).getNama() << " City" << endl;
                	cout << "1. Shop" << endl;
                	cout << "2. Go to an adventure" << endl;
                	cout << "3. Profile" << endl;
                	//cout << "4. Inventory" << endl;
                	cout << "Choose  : "; cin >> pilih;
                	if(pilih==1){
                		system("cls");
                		cout << "Welcome to Shop" << endl;
                		cout << "1. Buy" << endl;
                		cout << "2. Sell" << endl;
                		cout << "3. Exit" << endl;
                		cout <<"Choose : "; cin >> shop;
                		if(shop==1){
                			cout <<"1. " << HPotion.getNama() << " - " << HPotion.getBuyPrice() << " Gold "<<endl;
                			cout <<"2. " << MPotion.getNama() << " - " << MPotion.getBuyPrice() << " Gold "<<endl;
                			cout <<"3. Exit" << endl;
                			cout << "Choose : "; cin >> shop1;
                			if(shop1==1){
                				cout << "How Much : "; cin >> jum;
                				if(Hero::money < HPotion.getBuyPrice() * jum){
                					throw "Not Enough Money";
								} else {
									HPotion.addStok(jum);
									cout << "You bought " << jum << HPotion.getNama() << endl;
									Hero::money -= jum * HPotion.getBuyPrice();
								}
							} else if(shop1==2)	{
								cout << "How Much : "; cin >> jum;
                				if(Hero::money < MPotion.getBuyPrice() * jum){
                					cout << "Not Enough Money" << endl;
								} else {
									HPotion.addStok(jum);
									cout << "You bought " << jum << MPotion.getNama() << endl;
									Hero::money -= jum * MPotion.getBuyPrice();
								}
							} else if(shop1==3){
									
							} else {
									//throw
							}
						} else if(shop==2){
							cout <<"1. " << HPotion.getNama() << " - " << HPotion.getSellPrice() << " Gold "<<endl;
                			cout <<"2. " << MPotion.getNama() << " - " << MPotion.getSellPrice() << " Gold "<<endl;
                			cout <<"3. Exit" << endl;
                			cout << "Choose : "; cin >> shop1;
                			if(shop1==1) {
                				cout << "How Much : "; cin >> jum;
                				if(HPotion.getStok() < jum){
                					cout << "Not Enough Potion" << endl;
								} else {
									HPotion.minStok(jum);
									cout << "You sold " << jum << HPotion.getNama() << endl;
									Hero::money += jum * HPotion.getSellPrice();
								}
							} else if(shop1==2) {
								cout << "How Much : "; cin >> jum;
                				if(MPotion.getStok() < jum) {
                						cout << "Not Enough Potion" << endl;
								} else {
									MPotion.minStok(jum);
									cout << "You sold " << jum << MPotion.getNama() << endl;
									Hero::money += jum * MPotion.getSellPrice();
								}
							} else if(shop1==3) {
									
							} else {
									//throw
							}
						} else if(shop==3){
								
						} else {
								//throw
						}
					}else if(pilih==2) {
					system("cls");
						cout << "Map" << endl;
						stalingardOnClick();
						cout << "Destination " << endl;
						cout << "1. Moskva" << endl;
                		cout << "Choose where do you want to go :"; cin >> pilih2;
                		if(pilih2==1){
                			map.setCurloc(1);
						}else {
								//throw
						}
					} else if(pilih==3) {
							
					} else {
							//throw
					}
                		
				} else if(map.getCurLoc()==1) {
						
				} else if(map.getCurLoc()==2) {
						
				} else if(map.getCurLoc()==3) {
						
				} else if(map.getCurLoc()==4) {
						
				} else if(map.getCurLoc()==5) {
						
				} else if(map.getCurLoc()==6) {
						
				} else if(map.getCurLoc()==7) {
						
				}
				} while(pilih != 5);
			}else if(pil==2) {
				system("cls");
                cout<<"Try not to focusing on damaging the enemy. Keep an eye on your status! "<<endl;
                cout<<"Once all of your party's HP reaches zero, you lose."<<endl;
                system("pause");
			} else if(pil==3) {
				system("cls");
                pil = rand()%6;
                if(pil == 0) {
                	cout<<endl<<"Keep facing game over? Try getting better at the game.";
                }
                else if(pil == 1){
                    cout << endl << "Want to insta-win? Transfer bitcoin to our site!";
                }
                else if(pil == 2){
                    cout<<endl<<"Pro tip: Don't die.";
                }
                else if(pil == 3){
                    cout<<endl<<"Protect your mage at all cost! They deal the most damage.";
                }
                else if(pil == 4){
                    cout<<endl<<"Pro tip: Grind to win";
                }
                else if(pil == 5){
                    cout<<endl<<"Ultimate tip: Super easy mode? Alt+F4";
                }
                system("Pause");
			}
			else if(pil==4) {
				system("cls");
                cout<<"Proudly created by:"<<endl;
                cout<<"I. Yudhistira Indrawan - 00000016442"<<endl;
                cout<<"Neville Budiman\t       - 00000017642"<<endl;
                cout<<"Phili Stanlee\t       - 00000017649"<<endl;
                cout<<"Kevin\t\t       - 00000017639"<<endl;
                cout<<"Efraim Wijaya\t       - 00000016880"<<endl;
                system("Pause");
			}
			else if(pil==5){
				break;
			}
			else {
				//throw	
			}
	} while(pil!=5);
	return 0;
}

